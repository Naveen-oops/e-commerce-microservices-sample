version: v2beta1
name: cart

imports:
  - path: "../.devpilot-scripts/devspace-pipelines.yaml"

vars:
  SERVICE_NAME: "cart"
  K8S_MANIFEST_PATH_LOCAL: "${K8S_DIR}/infra/k8s/apps/overlays/local/cart/"
  K8S_MANIFEST_PATH_AZURE: "${K8S_DIR}/infra/k8s/apps/overlays/azure/cart/"

pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      start_dev cart
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments cart                           # 4. Deploy manifests
  # Custom pipeline to run the debug server. You can run this pipeline via `devspace run-pipeline debug-server`
  debug-server:
    run: |-
      echo "Running cart debug server."
      start_dev cart-debug

dev:
  # Development configuration for the cart service
  # This configuration allows you to run the cart service in development mode with hot reload and debugging support.
  cart:
    labelSelector:
      app: cart-deployment
    container: cart
    devImage: "image.registry.local:5001/cart:dev"
    sync:
      - excludePaths:
          - .git/
        uploadExcludePaths:
          - Dockerfile
          - target/
        printLogs: true
    terminal:
      command: ./devspace_start.sh
    ssh:
      enabled: true
    ports:
      - port: "7000:7000"
      - port: "6000:6000"
    open:
      - url: http://localhost:7000/swagger-ui.html
    env:
      - name: SERVER_PORT
        value: "7000"
      - name: APP_ENVIRONMENT
        value: "development"
      - name: LOG_LEVEL_ROOT
        value: "INFO"
  
  ## Remote debugging configuration
  # This configuration allows you to debug the application remotely using a Java debugger.
  # You can connect to this debug port using your IDE (e.g., IntelliJ IDEA)
  cart-debug:
    labelSelector:
      app: cart-deployment
    container: cart
    command:
      - java
      - -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:6000
      - -Dlogging.level.root=INFO
      - -jar
      - /app/app.jar
    ports:
      - port: "6000:6000"



### Helper commands
commands:
  # Development commands
  develop:
    command: devspace use namespace ${NAMESPACE} && devspace run dev
    description: "Start the cart service in development mode with hot reload and debugging support."
  debug:
    command: devspace use namespace ${NAMESPACE} && devspace run-pipeline debug-server
    description: "Attach to the debug server for remote debugging. Does not modify the application, but allows you to debug it remotely."
  stop:
    command: devspace use namespace ${NAMESPACE} && devspace purge
    description: "Stop the cart service and clean up resources."