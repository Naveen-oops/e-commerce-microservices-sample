plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.ecommerce'
version = '1.0.0'
sourceCompatibility = '17'
targetCompatibility = '17'

// Enable devtools in runtime
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
	// jcenter()
}

ext {
	set('springCloudVersion', "2021.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

	// Hot reload during dev
	implementation 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.fusesource.jansi:jansi:2.4.0'

	// OpenAPI documentation
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-webflux-core:1.6.9'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	jvmArgs = [
			"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:6000",
			"-Dspring.output.ansi.enabled=ALWAYS",
			"-Dspring.devtools.restart.enabled=true"
	]
	sourceResources sourceSets.main
	classpath = sourceSets.main.runtimeClasspath
}