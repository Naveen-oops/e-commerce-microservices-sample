version: v2beta1
name: store-ui

imports:
  - path: "../.devpilot-scripts/devspace-pipelines.yaml"

vars:
  SERVICE_NAME: "store-ui"
  K8S_MANIFEST_PATH_LOCAL: "${K8S_DIR}/infra/k8s/apps/overlays/local/store-ui/"
  K8S_MANIFEST_PATH_AZURE: "${K8S_DIR}/infra/k8s/apps/overlays/azure/store-ui/"

images:
  store-ui:
    image: store-ui
    dockerfile: ./Dockerfile
    rebuildStrategy: always
    context: ./
# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all                         # 2. Ensure pull secrets
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 4. Deploy Helm charts and manifests specfied as "deployments"
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all    # 2. Ensure pull secrets
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev app                # 4. Start dev mode "app" (see "dev" section)
  debug:
    run: |-
      start_dev app-debug          # Start dev mode "app-debug" (see "dev" section)


# This is a list of `deployments` that DevSpace can create for this project
deployments:
  app:
    # This deployment uses `kubectl` but you can also define `helm` deployments
    kubectl:
      manifests:
        - ../infra/k8s/apps/overlays/local/store-ui
      kustomize: true

dev:
# Development configuration for the store-ui service
# This configuration allows you to run the store-ui service in development mode with hot reload and debugging
  app:
    labelSelector:
      app: store-ui-deployment
    container: store-ui
    devImage: "image.registry.local:5001/store-ui:dev"
    sync:
      - path: ./:/app
        excludePaths:
          - .devspace/
          - node_modules/
          - build/
          - .git/
          - "*.log"
          - package-lock.json
          - yarn.lock
        initialSync: preferLocal
        printLogs: true
    terminal:
      command: ./devspace_start.sh
    ports:
      - port: "3000"
    open:
      - url: http://localhost:3000
    env:
      - name: NODE_ENV
        value: "development"
      - name: BROWSER
        value: "none"
      - name: FAST_REFRESH
        value: "false"
      - name: GENERATE_SOURCEMAP
        value: "false"
      - name: SKIP_PREFLIGHT_CHECK
        value: "true"
      - name: CHOKIDAR_USEPOLLING
        value: "false"
      - name: WATCHPACK_POLLING
        value: "false"
      - name: REACT_APP_CART_URL_BASE
        value: "http://localhost:8080/"
      - name: REACT_APP_PRODUCTS_URL_BASE
        value: "http://localhost:8081/"
      - name: REACT_APP_SEARCH_URL_BASE
        value: "http://localhost:8082/"
      - name: REACT_APP_USERS_URL_BASE
        value: "http://localhost:8083/"

# Remote Debug configuration for the store-ui service
  app-debug:
    labelSelector:
      app: store-ui-deployment
    container: store-ui
    devImage: "image.registry.local:5001/store-ui:dev"
    command:
      - npm
      - run
      - start
    ports:
      - port: "3000:3000"
      - port: "4000:4000"